define('userfrmKnowledgeFrameworkController',{
    //Type your controller code here 
    knwledgedContent: function() {
        var data = [
            //       {
            //         "APIName" : "Kony Payment App",
            //         "Description" : "This Applications Covers below five framework feature's:<br><br>1. Segment Row Height Animation<br>2. Flexcontainer Blur<br>3. KeyChain APi<br>4. Payment Api<br>5. Request Review ",
            //        "CodeSnippet" : '<label style="font-weight:bold;color:#f2f1f1;">/*Segment Row Animation*/</label><br><label style=color:#f2f1f1>/*<br>@function animateRows<br>@description function that animates the segment row height<br>@defined in the frmHomeController<br>*/</label><br><label style=color:#ffffff>animateRows: function animateRows() {<br>var section = 0;<br>var row = 0;<br>var contextDef = [{<br>sectionIndex: this.view.SegmentID.selectedIndex[0],<br>rowIndex: this.view.SegmentID.selectedIndex[1]<br>}];<br>var animDefinitionOne = {<br>0: {<br>"height": //Initial value<br>},<br>100: {<br>"height": //Final value,<br>}  };<br>var animDefinition = kony.ui.createAnimation(animDefinitionOne);<br>var animConfig = {<br>// Required configuration<br>};<br>var finalAnimation = {<br>definition: animDefinition,<br>config: animConfig,<br>callbacks: //if any<br>};<br> this.view.SegmentID.animateRows({<br> context: contextDef,<br>animation: finalAnimation<br>});<br>}</label><br><br><label style="font-weight:bold;color:#f2f1f1;">/*Flexcontainer Blur*/</label><br><label style=color:#f2f1f1>/*<br>@function timerFunc<br>@description function that blurs the widgets inside the flexcontainer<br>@defined in the Form1Controller<br>*/</label><br><label style=color:#ffffff>timerFunc:function(){<br>this.view.<FlexcontainerID>.blur= { "enabled": true,"value": 60 };<br>}</label><br><br><label style="font-weight:bold;color:#f2f1f1;">/*Keychain Api*/</label><br><label style=color:#f2f1f1>/*<br>@function keyChnSave<br>@description function that saves the information into the device\'s keychain.<br>@defined in the Form1Controller<br>*/</label><br><label style=color:#ffffff>keyChnSave:function(){<br>var cred = {"securedata"://Holds a string that contains the secure data to store in the keychain,"secureaccount"://Contains a string that specifies the account information to store in the keychain,"identifier"://Holds a string that uniquely identifies the information information};<br>kony.keychain.save(cred);<br>}</label><br><label style=color:#f2f1f1>/*<br>@function keyChnRetrieve<br>@description function that retrieves the specified information from the device\'s keychain.<br>@defined in the Form1Controller<br>*/</label><br><label style=color:#ffffff>keyChnRetrieve:function(){<br>var cred = {"identifier"://unique identifier of the information to retrieve};<br>var credDict = kony.keychain.retrieve(cred);//Returns a JavaScript Dictionary object containing the retrieved information, or an empty Dictionary if the information is not found.<br>}</label><br><br><label style="font-weight:bold;color:#f2f1f1;">/*Payment API*/</label><br><label style=color:#f2f1f1>/*<br>@function getPaymentDataSuccessCallback<br>@description function that gets executed when getPaymentData call is successful, with paymentDataResponse<br>@defined in the Form1Controller<br>*/</label><br><label style=color:#ffffff>getPaymentDataSuccessCallback:function (result) {<br>kony.payment.setTransactionStatus("success");<br>//do something<br>}<br></label><label style=color:#f2f1f1>/*<br>@function getPaymentDataErrorCallback<br>@description function that gets executed when getPaymentData call is failed, with error code<br>@defined in the Form1Controller<br>*/</label><br><label style=color:#ffffff>getPaymentDataErrorCallback:function(statusCode) {<br>//do something<br>}<br></label><label style=color:#f2f1f1>/*<br>@function getPayments<br>@description function to invoke payment process<br>@defined in the Form1Controller<br>*/</label><br><label style=color:#ffffff>getPayments:function(){<br>var paymentRequestData = { "paymentCardsInfo" : //The information on supported payment cards is configured in this object, "shippingAddressInfo" : //This object enables the Shipping Address fields in the Payment Sheet UI and shipping address values in paymentDataResponse , "billingAddressInfo" ://For iOS: This object enables/disables the Billing Address fields in the Payment Sheet UI. By default, the details entered by a user while adding a card is considered for billing address. All the values entered by a user in the Payment Sheet UI are returned to the app developer in paymentDataResponse.<br>For Android: The details entered by a user while adding a card are taken into consideration for the billing address. This object enables/disables the availability of billing address fields in paymentDataResponse,"merchantInfo" : //This object configures the information of the merchant who is responsible for processing transactions , "paymentSummary" : //This object summarizes the amount, type, and currency code of the payment };<br><br>kony.payment.getPaymentData(paymentRequestData,this.getPaymentDataSuccessCallback, this.getPaymentDataErrorCallback);<br>}<br></label><br><br><label style="font-weight:bold;color:#f2f1f1;">/*Request Review Api*/</label><br><label style=color:#f2f1f1>/*<br>@function ratingFunc<br>@description function which ask\'s the users of the app for ratings and written reviews.<br>@defined in the Form1Controller<br>*/</label><br><label style=color:#ffffff>ratingFunc:function(){<br>kony.application.requestReview();<br>}</label>',
            //         "DocLink" : 'Please find below the link for the documentation site:<br><a href = "http://docs.kony.com/konylibrary/visualizer/viz_widget_prog_guide/Default.htm#Segment.htm#Row%3FTocPath%3DReference%7CSegmentedUI%2520Widget%7COverviews%7C_____3"> Segment Row Height Animation </a><br><a href = "http://docs.kony.com/konylibrary/visualizer/viz_api_dev_guide/Default.htm#keychain_api_for_ios.htm%3FTocPath%3DKeychain%2520API%7C_____0"> Keychain Api</a><br><a href = "http://docs.kony.com/konylibrary/visualizer/viz_api_dev_guide/Default.htm#payment_api.htm%3FTocPath%3DPayment%2520API%7C_____0"> Payment Api</a><br><a href = "http://docs.kony.com/konylibrary/visualizer/viz_api_dev_guide/Default.htm#kony.payment_functions.htm%3FTocPath%3DPayment%2520API%7Ckony.payment%2520Namespace%7C_____0"> kony.payment Namespace</a><br><a href = "http://docs.kony.com/konylibrary/visualizer/viz_api_dev_guide/Default.htm#request_app_review_api.htm%3FTocPath%3DRequest%2520App%2520Review%2520API%7C_____0"> Request Review Api</a><br>'
            //       }, 
            {
                "APIName": "Segment Row Height Animation",
                "Description": "In Segment rows, you can move (translate), rotate, or scale child widgets. For example, you can display a rotating logo or a hand icon that simulates waving by moving back and forth.<br>Also, your app can slide interface controls into a row from off screen. Or it can simulate the hands of an analog clock moving onscreen.<br>Apart from the above, you can also animated the row height using the row animation capabilities.<br><br>This app animates the row height for the list present in the bottom of the landing screen. This list contains a list of already added payees. Once you tap on one of the rows, the row expands to show additional details for that payee.",
                "CodeSnippet": '<label style="font-weight:bold;color:#f2f1f1;">/*Segment Row Animation*/</label><br><label style=color:#f2f1f1>/*<br>@function animateRows<br>@description function that animates the segment row height<br>@defined in the frmHomeController<br>*/</label><br><label style=color:#ffffff>animateRows: function animateRows() {<br>var section = 0;<br>var row = 0;<br>var contextDef = [{<br>sectionIndex: this.view.&lt SegmentID&gt.selectedIndex[0],<br>rowIndex: this.view.&lt SegmentID&gt.selectedIndex[1]<br>}];<br>var animDefinitionOne = {<br>0: {<br>"height": //Initial value<br>},<br>100: {<br>"height": //Final value,<br>}  };<br>var animDefinition = kony.ui.createAnimation(animDefinitionOne);<br>var animConfig = {<br>// Required configuration<br>};<br>var finalAnimation = {<br>definition: animDefinition,<br>config: animConfig,<br>callbacks: //if any<br>};<br> this.view.SegmentID.animateRows({<br> context: contextDef,<br>animation: finalAnimation<br>});<br>}</label>',
                "DocLink": 'Please find below the link for the documentation site:<br><a href = "http://docs.kony.com/konylibrary/visualizer/viz_widget_prog_guide/Default.htm#Segment.htm#Row%3FTocPath%3DReference%7CSegmentedUI%2520Widget%7COverviews%7C_____3"> Segment Row Height Animation </a>'
            }, {
                "APIName": "Flex Container Blur",
                "Description": "Flex containers now comes woth the capability to blur out its content catering to the use case if you need to screen some sensitive information from public viewing. You can enable or disable a blur-effect for a FlexContainer by making use of a constructor- level property, called “blur”. The blur property accepts a dictionary that contains two keys: enabled and value. You must specify an appropriate value for both the dictionary keys, otherwise the property will not be valid.<br><br>This app uses the Flex Blur Property to blur out the credit card details in the card details section of the payment page.",
                "CodeSnippet": '<label style="font-weight:bold;color:#f2f1f1;">/*Flexcontainer Blur*/</label><br><label style=color:#f2f1f1>/*<br>@function timerFunc<br>@description function that blurs the widgets inside the flexcontainer<br>@defined in the Form1Controller<br>*/</label><br><label style=color:#ffffff>timerFunc:function(){<br>this.view.&lt FlexcontainerID&gt.blur= { "enabled": true,"value": 60 };<br>}</label>',
                "DocLink": 'Please find below the link for the documentation site:<br><a href = "http://docs.kony.com/konylibrary/visualizer/viz_widget_prog_guide/Default.htm#FlexContainer.htm#Overview%3FTocPath%3DReference%7CFlexContainer%2520Widget%7COverviews%7C_____0"> Flex Container Blur </a>'
            }, {
                "APIName": "Keychain API",
                "Description": "With the Keychain API, your app can save user\'s credential information in the device\'s keychain. The app can then retrieve this information later and log the user on to your app\'s back-end services so that your user doesn\'t have to do it manually. The Keychain API is available on iOS devices.To store credential information in the device\'s keychain, you must call the kony.keychain.save function. Your app can access saved credential information by calling the kony.keychain.retrieve function. To remove any information that is no longer required, you must call the kony.keychain.remove function.<br><br>This app makes use of the Keychain API to store, and retrieve card details of the users.",
                "CodeSnippet": '<label style="font-weight:bold;color:#f2f1f1;">/*Keychain Api*/</label><br><label style=color:#f2f1f1>/*<br>@function keyChnSave<br>@description function that saves the information into the device\'s keychain.<br>@defined in the Form1Controller<br>*/</label><br><label style=color:#ffffff>keyChnSave:function(){<br>var cred = {"securedata"://Holds a string that contains the secure data to store in the keychain,"secureaccount"://Contains a string that specifies the account information to store in the keychain,"identifier"://Holds a string that uniquely identifies the information information};<br>kony.keychain.save(cred);<br>}</label><br><label style=color:#f2f1f1>/*<br>@function keyChnRetrieve<br>@description function that retrieves the specified information from the device\'s keychain.<br>@defined in the Form1Controller<br>*/</label><br><label style=color:#ffffff>keyChnRetrieve:function(){<br>var cred = {"identifier"://unique identifier of the information to retrieve};<br>var credDict = kony.keychain.retrieve(cred);//Returns a JavaScript Dictionary object containing the retrieved information, or an empty Dictionary if the information is not found.<br>}</label>',
                "DocLink": 'Please find below the link for the documentation site:<br><a href = "http://docs.kony.com/konylibrary/visualizer/viz_api_dev_guide/Default.htm#keychain_api_for_ios.htm%3FTocPath%3DKeychain%2520API%7C_____0"> Keychain API</a>'
            }, {
                "APIName": "Payment API",
                "Description": "The Kony Payment API facilitates online transactions in various Kony applications. It enables users to include Apple Pay and Google Wallet as payment options in their respective applications.<br><br>This app makes use of the Payment API in the payment screen. Platform specific payment options are shown to the user, i.e. Google Wallet for Android and Apple Pay for iOS.",
                "CodeSnippet": '<label style="font-weight:bold;color:#f2f1f1;">/*Payment API*/</label><br><label style=color:#f2f1f1>/*<br>@function getPaymentDataSuccessCallback<br>@description function that gets executed when getPaymentData call is successful, with paymentDataResponse<br>@defined in the Form1Controller<br>*/</label><br><label style=color:#ffffff>getPaymentDataSuccessCallback:function (result) {<br>kony.payment.setTransactionStatus("success");<br>//do something<br>}<br></label><label style=color:#f2f1f1>/*<br>@function getPaymentDataErrorCallback<br>@description function that gets executed when getPaymentData call is failed, with error code<br>@defined in the Form1Controller<br>*/</label><br><label style=color:#ffffff>getPaymentDataErrorCallback:function(statusCode) {<br>//do something<br>}<br></label><label style=color:#f2f1f1>/*<br>@function getPayments<br>@description function to invoke payment process<br>@defined in the Form1Controller<br>*/</label><br><label style=color:#ffffff>getPayments:function(){<br>var paymentRequestData = {<br> "paymentCardsInfo" : //The information on supported payment cards is configured in this object, <br>"shippingAddressInfo" : //This object enables the Shipping Address fields in the Payment Sheet UI and shipping address values in paymentDataResponse ,<br> "billingAddressInfo" ://For iOS: This object enables/disables the Billing Address fields in the Payment Sheet UI. By default, the details entered by a user while adding a card is considered for billing address. All the values entered by a user in the Payment Sheet UI are returned to the app developer in paymentDataResponse.<br>For Android: The details entered by a user while adding a card are taken into consideration for the billing address. This object enables/disables the availability of billing address fields in paymentDataResponse,<br>"merchantInfo" : //This object configures the information of the merchant who is responsible for processing transactions ,<br> "paymentSummary" : //This object summarizes the amount, type, and currency code of the payment };<br><br>kony.payment.getPaymentData(paymentRequestData,this.getPaymentDataSuccessCallback, this.getPaymentDataErrorCallback);<br>}<br></label>',
                "DocLink": 'Please find below the link for the documentation site:<br><a href = "http://docs.kony.com/konylibrary/visualizer/viz_api_dev_guide/Default.htm#payment_api.htm%3FTocPath%3DPayment%2520API%7C_____0"> Payment API</a><br><a href = "http://docs.kony.com/konylibrary/visualizer/viz_api_dev_guide/Default.htm#kony.payment_functions.htm%3FTocPath%3DPayment%2520API%7Ckony.payment%2520Namespace%7C_____0"> kony.payment Namespace</a>'
            }, {
                "APIName": "Request App Review API",
                "Description": "Typically, app users provide ratings and reviews on Apple App Store and Google Play Store to give feedback on their experience of using an app. This helps other users ascertain which apps they would like to use. You, as an app developer, can ask the users of your app for ratings and written reviews. You can then respond to the provided feedback in order to improve your app’s discoverability, encourage downloads, and build a rapport with the app users.<br>Ratings and reviews influence how your app ranks in search results, and can affect whether someone downloads your app. Users can rate your app on a scale of one to five stars. They can also add a written review.<br><br>This app shows a prompt with a Rating Request once you are done with a payment. The prompt presented has a Rate Now button and on click of the same the user is navigated to AppStore/Play Store depending on the device platform.",
                "CodeSnippet": '<label style="font-weight:bold;color:#f2f1f1;">/*Request Review Api*/</label><br><label style=color:#f2f1f1>/*<br>@function ratingFunc<br>@description function which ask\'s the users of the app for ratings and written reviews.<br>@defined in the Form1Controller<br>*/</label><br><label style=color:#ffffff>ratingFunc:function(){<br>kony.application.requestReview();<br>}</label>',
                "DocLink": 'Please find below the link for the documentation site:<br><a href = "http://docs.kony.com/konylibrary/visualizer/viz_api_dev_guide/Default.htm#request_app_review_api.htm%3FTocPath%3DRequest%2520App%2520Review%2520API%7C_____0"> Request App Review API</a><br>'
            }, {
                "APIName": "Vibration API",
                "Description": "This API starts the vibration feature on a device, provided that device supports vibration. If the device does not support vibration, this API has no effect. If a vibration pattern is already in progress when this API is called, the previous pattern is halted and the new one begins.<br><br>This application triggers the API call once the payment is completed successfully.",
                "CodeSnippet": '<label style="font-weight:bold;color:#f2f1f1;">/*Vibration Api*/</label><br><label style=color:#f2f1f1>/*<br>@function timerFunc<br>@description function which starts vibration once the payment is successful<br>@defined in the Form1Controller<br>*/</label><br><label style=color:#ffffff>timerFunc:function(){<br>var config = [{"delay" : 0, "duration" : 100, "amplitude" : 250}];<br>kony.phone.startVibration (config, false);<br>}</label>',
                "DocLink": 'Please find below the link for the documentation site:<br><a href = "http://docs.kony.com/konylibrary/visualizer/viz_api_dev_guide/Default.htm#kony.phone_functions.htm#kony.phone.startVibration%3FTocPath%3DPhone%2520API%7Ckony.phone%2520Namespace%7CFunctions%7C_____12"> Vibration API</a><br>'
            }, {
                "APIName": "Device Setting callback",
                "Description": "Users can use the registerOnSettingsChangeCallback API to listen in Kony applications, if any settings have been changed in Native settings applications. Users can pass the list of required settings in the first parameter. In addition, users can pass the callback, which is invoked when any required setting is changed, in the second parameter. The callback is invoked with parameters, which provide information about the setting that was changed and the values of said setting. If users want to stop listening to changes in the settings, they must successfully register and pass null in the second parameter as well as pass the list of settings that they want to stop listening in the first parameter.<br><br>In this application, the user is notified about changes(on/off) to the wifi settings using a toast.",
                "CodeSnippet": '<label style="font-weight:bold;color:#f2f1f1;">/*Device Setting callback*/</label><br><label style=color:#f2f1f1>/*@description Defined in application Post Appinit event, when ever device wifi is enabled or disabled user will be notified using toast<br>*/</label><br><label style=color:#ffffff>kony.application.registerOnSettingsChangeCallback(["wifi"], deviceSettingCallback);</label>',
                "DocLink": 'Please find below the link for the documentation site:<br><a href = "http://docs.kony.com/konylibrary/visualizer/viz_api_dev_guide/Default.htm#kony.application_functions.htm#kony.application.registerOnSettingsChangeCallback%3FTocPath%3DApplication%2520API%7Ckony.application%2520Namespace%7CFunctions%7C_____24"> Device Setting callback</a><br>'
            }
        ];
        this.view.KnowledgeFramework.setData(data);
    }
});
define('frmKnowledgeFrameworkControllerActions',{
    /*
      This is an auto generated file and any modifications to it may result in corruption of the action sequence.
    */
    /** postShow defined for frmKnowledgeFramework **/
    AS_Form_ffeb2b471a254051851f3d30816428fd: function AS_Form_ffeb2b471a254051851f3d30816428fd(eventobject) {
        var self = this;
        this.knwledgedContent();
    }
});



define('frmKnowledgeFrameworkController',["userfrmKnowledgeFrameworkController","frmKnowledgeFrameworkControllerActions"],
		function(){
			var controller = require("userfrmKnowledgeFrameworkController");
			var controllerActions = ["frmKnowledgeFrameworkControllerActions"];

			for(var i = 0; i < controllerActions.length; i++){
				var actions = require(controllerActions[i]);
				for(var key in actions){
					controller[key] = actions[key];
				}
			}

		return controller;
});
